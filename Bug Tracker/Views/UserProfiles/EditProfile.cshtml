
@model Bug_Tracker.ViewModel.UserProfileViewModel
@using Bug_Tracker.Helpers

@{
    ViewBag.Title = "EditProfile";
}

    <div class="page-inner">
        <div class="row no-gutters">
            <div class="col-12">
                <div class="card bd-l-0-force bd-t-0-force bd-r-0-force">
                    <div class="card-body-profile bg-primary pd-y-50">
                        <div class="row no-gutters">
                            <div class="col-md-6 mg-t-20">
                                <div class="d-flex align-items-center">
                                    <div class="mr-3">
                                        <span class="avatar avatar-lg avatar-online pd-b-20">
                                            @{ 
                                                var userHelper = new UserHelper();
                                             }
                                            <img src="@userHelper.GetUserAvatar()" class="img-fluid wd-100" alt="">
                                        </span>
                                    </div>
                                    <div class="mg-b-0">
                                        <h2 class="tx-gray-100 tx-24 mg-b-0">@Model.FirstName @Model.LastName</h2>
                                        <p class="mg-b-10 tx-gray-300">@Model.Email</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <h2>Edit Your Profile</h2>

                @using (Html.BeginForm("EditProfile", "UserProfiles", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="Avatar" class="form-control"/>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-secondary" />
                            </div>
                        </div>
                    </div>
                }
                <p>
                    @Html.ActionLink("Change Password?", "ChangePassword", "Manage")
                </p>
            </div>
        </div>
    </div>

@section scripts {
        <script>
            var editProfileMessage = '@TempData["EditProfileMessage"]';
            if (editProfileMessage != "") {
                Swal.fire({
                    title: "YAY!",
                    text: editProfileMessage,
                    icon: 'success',
                    confirmButtonText: "OK"
                })
            }
        </script>

    }
